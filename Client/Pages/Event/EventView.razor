@page "/eventview/{eventId}"

@using EventSpaceUI.Client.Utilities
@using static EventSpaceUI.Client.Pages.Event.EventForm
@inject IApiService _apiService
@inject NavigationManager NavigationManager 
@inject ILocalStorageService LocalStorage


<div class="container p-5">
    <div class="row">
        <img src="/images/livemusic.jpeg" class="event-img mt-5" />
    </div>
    <div class="row pt-5 ">
        <div class="col-7">
            <h2>@Event.Name</h2>
            <h3 class="pt-1 pb-3">@Event.Artist</h3>
            <div class="event-status">
                <h5>@Event.Type</h5>
            </div>

            @if (Event.TierList.Count > 0 && Event.Type != "Free")
            {
                @foreach (var tier in Event.TierList)
                {
                    <div class=" row mb-2 d-flex mt-2 pb-5 justify-content-between event-list mt-2">
                        <div class="col-3"> Name : @tier.Name</div>
                        <div class="col-3"> Price : NPR. @tier.Price</div>
                        <div class="col-3"> Available seats : @tier.AvailableSeats</div>
                        <div class=" col-3 mt-3">
                            <a class="btn-main-sm btn-main-outline p-2 mt-5 " @onclick="() => NavigateToTierView(tier.Id ?? 0)"><i class="fas fa-arrow-right"></i></a>
                        </div>
                    </div>
                }
            }
        </div>
        <div class="col-1">
            <div class="divider-evt"></div>

        </div>
        <div class=" col-4 pt-3">
            <div class="row ">
                <h2 class="fs--normal">When And Where</h2>
                <div class="row justify-content-between ps-2 pt-5">
                    <div class="col-2 p-1 d-flex justify-content-center box align-items-center">
                        <i class="fas fa-calendar-week "></i>
                    </div>
                    <div class="col-10">
                        <h5>Date and Time</h5>
                        <h5>@Event.Date.ToShortDateString()</h5>
                    </div>
                </div>
                <div class="row justify-content-between ps-2 pt-5">
                    <div class="col-2 p-1 d-flex justify-content-center  box align-items-center">
                        <i class="fas fa-map-marker-alt"></i>
                    </div>
                    <div class="col-10">
                        <h5>Location</h5>
                        <h5>@Event.Venue</h5>
                    </div>
    
                </div>
            </div>

            @if (Event.Type == "Free")
            {
                <button id="payment-button" class="btn btn-success mt-4" @onclick="FreeTicket">Get Free Ticket</button>
            }

            @if (Event.Type == "Fundraiser")
            {
                	<AuthorizeView>
					<Authorized>
                <button type="button" id="proceedBtn" class="btn btn-outline-light" data-bs-toggle="modal" data-bs-target="#donateModal">Donate</button>
                </Authorized>
                </AuthorizeView>
            }
            <div class="modal fade" id="donateModal" tabindex="-1" aria-labelledby="donateModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content bg--primary border-white">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="eventModalLabel">Ticket confirmation</h1>
                            <button type="button" class="btn-close bg-white" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="pt-3"><span>Event:</span> @Event.Name</div>
                            <input type="number" class="form-control d-block mt-3" id="donationAmount" placeholder="Enter amount to donate" @bind="donationAmt" />
                            <button id="payment-button" class="btn btn-success mt-4" @onclick="donate">Pay with Khalti</button>
                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>
</div>

@code {
    private EventResponseDTO Event = new EventResponseDTO();
    private PaymentRequestDTO model = new PaymentRequestDTO();


    public decimal donationAmt { get; set; }



    public class PaymentResponse
    {
        public string pidx { get; set; }
        public string payment_url { get; set; }
        public DateTime expires_at { get; set; }
        public int expires_in { get; set; }
        public int user_fee { get; set; }
    }

    public class FreeTicketResponse
    {
        public string Message { get; set; }
    }

    public class PaymentRequestDTO
    {

        public int? TierId { get; set; }
        public int? EventId { get; set; }
        public int Qty { get; set; }

    }

    [Parameter]
    public string EventId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(EventId))
        {
            var endpoint = $"Event/{EventId}";
            Event = await _apiService.CallApiAsync<EventResponseDTO>(endpoint, HttpMethod.Get);
        }
    }

    private async void NavigateToTierView(int tierId)
    {
        var res = await LocalStorage.GetItemAsync<string>("token");
        if (!String.IsNullOrEmpty(res))
        {
            NavigationManager.NavigateTo($"/ticket/{EventId}/{tierId}");
        }
        else
        {
            NavigationManager.NavigateTo("/login");

        }
    }


    private async Task donate()
    {
        var endpoint = "Ticket/Donate";


        var donationmodel = new
        {
            eventId = int.Parse(EventId),
            amt = donationAmt
        };

        var res = await _apiService.CallApiAsync<PaymentResponse>(endpoint, HttpMethod.Post, donationmodel);
        if (res != null)
        {
            NavigationManager.NavigateTo(res.payment_url);
        }
    }

    private async Task dummyPay()
    {
        var endpoint = "Ticket/Payment";

        model.EventId = int.Parse(EventId);

        var res = await _apiService.CallApiAsync<PaymentResponse>(endpoint, HttpMethod.Post);
        if (res != null)
        {
            NavigationManager.NavigateTo(res.payment_url);
        }
    }

    private async Task FreeTicket()
    {
        try{
            var token = await LocalStorage.GetItemAsync<string>("token");
            if (!String.IsNullOrEmpty(token))
            {
                var endpoint = "Ticket/FreeTicket";

                model.EventId = int.Parse(EventId);

                var res = await _apiService.CallApiAsync<FreeTicketResponse>(endpoint,HttpMethod.Post,model);
                if (res != null)
                {
                    NavigationManager.NavigateTo($"/freeticket");
                }

            }
            else
            {
                NavigationManager.NavigateTo("/login");

            }
        }
        catch(Exception ex)
        {
            throw;
        }
    }
}



<script src="https://khalti.s3.ap-south-1.amazonaws.com/KPG/dist/2020.12.17.0.0.0/khalti-checkout.iffe.js"></script>


<script>

    var total;
    var config = {
        "publicKey": "test_public_key_574a5a24871b4ce99f519e96d3c23629",
        "productIdentity": "1234567890",
        "productName": "Dragon",
        "productUrl": "http://gameofthrones.wikia.com/wiki/Dragons",
        "paymentPreference": [
            "KHALTI",
            "EBANKING",
            "MOBILE_BANKING",
            "CONNECT_IPS",
            "SCT",
        ],
        "eventHandler": {
            onSuccess(payload) {
                console.log(payload);
            },
            onError(error) {
                console.log(error);
            },
            onClose() {
                console.log('widget is closing');
            }
        }
    };

    var checkout = new KhaltiCheckout(config);
    var btn = document.getElementById("payment-button");
    btn.onclick = function () {

        checkout.show({ amount: 10000 });
    }

 

</script>
