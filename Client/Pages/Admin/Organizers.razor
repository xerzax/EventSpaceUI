@page "/allOrganizers"
@using EventSpaceUI.Client.Utilities
@inject IApiService _apiService
@layout AdminLayout




<div class="container p-5">
    <h2 class="custom-box bg--secondary text-primary mb-3">Organizers</h2>
    <div class="table-responsive">
        <table class="table table-dark pt-4">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">UserName</th>
                    <th scope="col">FullName</th>
                    <th scope="col">Address</th>
                    <th scope="col">Email</th>
                    <th scope="col">Contact</th>
                    <th scope="col">Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var obj in UsersList)
                {
                    <tr>
                        <td> </td>
                        <td>@obj.UserName</td>
                        <td>@obj.FullName</td>
                        <td>@obj.Address</td>
                        <td>@obj.Email</td>
                        <td>@obj.Contact</td>
                        <td>
                            @if (obj.IsConfirmed ?? false)
                            {
                                <span>Verified</span>
                            }
                            else
                            {
                                <button class="btn btn-primary" @onclick="() => Verify(obj.Email)">Verify</button>
                            }
                        </td>
                        <!-- Uncomment below if you want a verify button -->
                        <!-- <td>
                            <button class="btn btn-primary">Verify</button>
                        </td> -->
                    </tr>
                }
            </tbody>
        </table>
    </div>

</div>

@code {
    public class UserResponseDTO
    {
        public string UserName { get; set; }
        public string FullName { get; set; }


        public string? Email { get; set; }

        public string? Address { get; set; }

        public string? Contact { get; set; }
        public bool? IsConfirmed { get; set; }

    }
    private List<UserResponseDTO> UsersList = new List<UserResponseDTO>();

    protected override async Task OnInitializedAsync()
    {
        var endpoint = "Dashboard/get-all-organizer";
        UsersList = await _apiService.CallApiAsync<List<UserResponseDTO>>(endpoint, HttpMethod.Get);
    }

    private async void Verify (string email)
    {
        var endpoint = $"Account/verify-organizer/{email}";
        var res = await _apiService.CallApiAsync<bool>(endpoint,HttpMethod.Get);
    }



}