@page "/charts"
@using EventSpaceUI.Client.Shared.Model
@using EventSpaceUI.Client.Utilities
@using Blazorise.Charts
@inject IApiService _apiService
@layout AdminLayout

<h3>Tickets sold by category</h3>

<Chart @ref="barChart" Type="ChartType.Bar" TItem="double" Clicked="@(async () => await HandleRedraw())" />
@code {
    public class TicketsSoldByCategory
    {
        public string CategoryName { get; set; }
        public double TicketsSold { get; set; }
    }
    Chart<double> barChart;
    List<TicketsSoldByCategory> chartData = new List<TicketsSoldByCategory>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await FetchDataAndUpdateChart();
        }
    }

    async Task FetchDataAndUpdateChart()
    {
        chartData = await _apiService.CallApiAsync<List<TicketsSoldByCategory>>("event/GetEventByCategory", HttpMethod.Get);
        await UpdateChart();
    }

    async Task UpdateChart()
    {
        await barChart.Clear();
        await barChart.AddLabelsDatasetsAndUpdate(GetLabels(), GetBarChartDataset());
    }

    async Task HandleRedraw()
    {
        await barChart.Clear();
        await barChart.AddLabelsDatasetsAndUpdate(GetLabels(), GetBarChartDataset());
    }

    public List<string> GetLabels()
    {
        return chartData.Select(d => d.CategoryName).ToList();
    }

    private BarChartDataset<double> GetBarChartDataset()
    {
        return new()
            {
                Label = "Tickets Sold by Category",
                Data = chartData.Select(d => d.TicketsSold).ToList(),
                BackgroundColor = backgroundColors,
                BorderColor = borderColors,
                BorderWidth = 1
            };
    }

    List<string> Labels => GetLabels();
    List<string> backgroundColors => new List<string> { ChartColor.FromRgba(255, 99, 132, 0.2f), ChartColor.FromRgba(54, 162, 235, 0.2f), ChartColor.FromRgba(255, 206, 86, 0.2f), ChartColor.FromRgba(75, 192, 192, 0.2f), ChartColor.FromRgba(153, 102, 255, 0.2f), ChartColor.FromRgba(255, 159, 64, 0.2f) };
    List<string> borderColors => new List<string> { ChartColor.FromRgba(255, 99, 132, 1f), ChartColor.FromRgba(54, 162, 235, 1f), ChartColor.FromRgba(255, 206, 86, 1f), ChartColor.FromRgba(75, 192, 192, 1f), ChartColor.FromRgba(153, 102, 255, 1f), ChartColor.FromRgba(255, 159, 64, 1f) };
}
